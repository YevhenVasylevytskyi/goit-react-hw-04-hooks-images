{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Container/Container.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/SearchError/SerchError.module.css","App.module.css","components/Searchbar/Searchbar.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","services/ApiService.js","components/Loader/Loader.js","components/SearchError/SearchError.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Container","children","className","style","container","Searchbar","searchPictures","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","toast","success","error","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLocaleLowerCase","modalRoot","document","querySelector","Modal","onCloseModal","modalImage","modalAlt","useEffect","handleKeyDown","key","addEventListener","removeEventListener","createPortal","Overlay","onClick","src","alt","ImageGalleryItem","cards","showModal","setShowModal","setModalImage","setModalAlt","onOpenModal","target","dataset","source","attributes","textContent","map","card","webformatURL","ImageGalleryItemImage","id","largeImageURL","nodeName","protoType","PropTypes","array","Button","loadMore","ApiService","this","page","searchQuery","total","amount","api_key","URL","fetch","then","response","ok","json","result","totalHits","hits","length","catch","console","warn","newInputValue","LoaderOn","Loader","color","height","width","SerchError","message","Message","string","newApiService","ImageGallery","setCards","status","setStatus","resetPage","getImages","err","Idle","finally","setTimeout","window","scrollTo","top","documentElement","scrollHeight","behavior","App","setSearchQuery","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDom","render","StrictMode"],"mappings":"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","file":"static/js/main.64b4c967.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__BRgxo\",\"Modal\":\"Modal_Modal__3A6Gn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__11GeK\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__36VXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1OHze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__bJwc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2bldp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"SerchError_Message__FxmQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1aX6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__uNk5F\",\"SearchForm\":\"Searchbar_SearchForm__2fPbt\",\"SearchForm_button\":\"Searchbar_SearchForm_button__1ISA8\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__3Pkl3\",\"SearchForm_input\":\"Searchbar_SearchForm_input__3cMEj\"};","import style from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={style.container}>{children}</div>;\n}\n","// import { Component } from 'react';\nimport React from 'react';\nimport { useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport style from './Searchbar.module.css';\n\nexport default function Searchbar({ searchPictures }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSearchInput = event => {\n    setInputValue(event.currentTarget.value.trim().toLocaleLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue.trim() === '') {\n      toast.error('Введите название картинки');\n      return;\n    }\n\n    searchPictures(inputValue);\n    toast.success('Приятного просмотра');\n\n    setInputValue('');\n  };\n\n  return (\n    <header className={style.Searchbar} onSubmit={handleSubmit}>\n      <form className={style.SearchForm}>\n        <button type=\"submit\" className={style.SearchForm_button}>\n          <span className={style.SearchForm_button_label}>\n            <ImSearch />\n            Search\n          </span>\n        </button>\n\n        <input\n          className={style.SearchForm_input}\n          name=\"inputValue\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={inputValue}\n          onChange={handleSearchInput}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  searchPictures: PropTypes.func,\n};\n\n// export default class Searchbar extends Component {\n//   state = {\n//     inputValue: '',\n//   };\n\n//   handleSearchInput = event => {\n//     this.setState({\n//       inputValue: event.currentTarget.value.trim().toLocaleLowerCase(),\n//     });\n//     // console.log(event.currentTarget.value);\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n\n//     if (this.state.inputValue.trim() === '') {\n//       toast.error('Введите название картинки');\n//       return;\n//     }\n\n//     this.props.searchPictures(this.state.inputValue);\n//     toast.success('Приятного просмотра');\n\n//     this.setState({ inputValue: '' });\n//   };\n\n//   render() {\n//     return (\n//       <header className={style.Searchbar} onSubmit={this.handleSubmit}>\n//         <form className={style.SearchForm}>\n//           <button type=\"submit\" className={style.SearchForm_button}>\n//             <span className={style.SearchForm_button_label}>\n//               <ImSearch />\n//               Search\n//             </span>\n//           </button>\n\n//           <input\n//             className={style.SearchForm_input}\n//             name=\"inputValue\"\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             value={this.state.inputValue}\n//             onChange={this.handleSearchInput}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// Searchbar.propTypes = {\n//   searchPictures: PropTypes.func,\n// };\n","// import React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport style from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({\n  onCloseModal,\n  modalImage,\n  modalAlt,\n  children,\n}) {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [onCloseModal]);\n\n  return createPortal(\n    <div className={style.Overlay} onClick={onCloseModal}>\n      <div className={style.Modal}>\n        {children}\n        <img src={modalImage} alt={modalAlt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onKeyDown: PropTypes.func,\n  onCloseModal: PropTypes.func,\n};\n\n// export default class Modal extends Component {\n//   static propTypes = {\n//     onCloseModal: PropTypes.func.isRequired,\n//     modalImage: PropTypes.string.isRequired,\n//     modalAlt: PropTypes.string.isRequired,\n//   };\n\n//   componentDidMount() {\n//     // console.log('Modal componentDidMount');\n\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     console.log('Modal componentWillUnmount');\n\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = event => {\n//     console.log(event.code);\n\n//     if (event.key === 'Escape') {\n//       // console.log('Нажали ESC, нужно закрыть модалку');\n//       this.props.onCloseModal(event);\n//     }\n//   };\n\n//   handleBackdropClick = event => {\n//     // console.log('Кликнули в бекдроп');\n//     // console.log('currentTarget: ', event.currentTarget);\n//     // console.log('target: ', event.target);\n\n//     if (event.currentTarget === event.target) {\n//       this.props.onCloseModal();\n//     }\n//   };\n\n//   render() {\n//     return createPortal(\n//       <div className={style.Overlay} onClick={this.props.onCloseModal}>\n//         <div className={style.Modal}>\n//           {this.props.children}\n//           <img src={this.props.modalImage} alt={this.props.modalAlt} />\n//         </div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n\n// Modal.propTypes = {\n//   onKeyDown: PropTypes.func,\n//   onCloseModal: PropTypes.func,\n// };\n","// import React, { Component } from 'react';\nimport { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport PropTypes from 'prop-types';\nimport style from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ cards }) {\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState('');\n  const [modalAlt, setModalAlt] = useState('');\n\n  const onOpenModal = event => {\n    setShowModal(true);\n    setModalImage(event.target.dataset.source);\n    setModalAlt(event.target.attributes.alt.textContent);\n  };\n\n  const onCloseModal = event => {\n    if (event.target.nodeName !== 'IMG') {\n      setShowModal(false);\n      setModalImage('');\n      setModalAlt('');\n    }\n  };\n\n  return (\n    <>\n      {cards.map(card => {\n        return (\n          <li className={style.ImageGalleryItem} key={card.id}>\n            <div>\n              <img\n                onClick={onOpenModal}\n                src={card.webformatURL}\n                className={style.ImageGalleryItemImage}\n                alt={card.id}\n                data-source={card.largeImageURL}\n              />\n            </div>\n          </li>\n        );\n      })}\n\n      {showModal && (\n        <Modal\n          onCloseModal={onCloseModal}\n          modalImage={modalImage}\n          modalAlt={modalAlt}\n        />\n      )}\n    </>\n  );\n}\n\nImageGalleryItem.protoType = {\n  cards: PropTypes.array,\n};\n\n// export default class ImageGalleryItem extends Component {\n//   state = {\n//     showModal: false,\n//     modalImage: '',\n//     modalAlt: '',\n//   };\n\n//   onOpenModal = event => {\n//     this.setState({\n//       modalImage: event.target.dataset.source,\n//       showModal: true,\n//       modalAlt: event.target.attributes.alt.textContent,\n//     });\n//     //  console.log(event.target.dataset.source);\n//     //  console.log(event.target.attributes.alt.textContent);\n//   };\n\n//   onCloseModal = event => {\n//     if (event.target.nodeName !== 'IMG') {\n//       this.setState({ showModal: false, modalIagemg: '', modalAlt: '' });\n//     }\n//   };\n\n//   render() {\n//     const { showModal } = this.state;\n\n//     return (\n//       <>\n//         {this.props.cards.map(card => {\n//           return (\n//             <li className={style.ImageGalleryItem} key={card.id}>\n//               <div>\n//                 <img\n//                   onClick={this.onOpenModal}\n//                   src={card.webformatURL}\n//                   className={style.ImageGalleryItemImage}\n//                   alt={card.id}\n//                   data-source={card.largeImageURL}\n//                 />\n//               </div>\n//             </li>\n//           );\n//         })}\n\n//         {showModal && (\n//           <Modal\n//             onCloseModal={this.onCloseModal}\n//             modalImage={this.state.modalImage}\n//             modalAlt={this.state.modalAlt}\n//           />\n//         )}\n//       </>\n//     );\n//   }\n// }\n\n// ImageGalleryItem.protoType = {\n//   cards: PropTypes.array,\n// };\n","import style from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ loadMore }) {\n  return (\n    <button type=\"submit\" onClick={() => loadMore()} className={style.Button}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  LoadMore: PropTypes.func,\n};\n","export default class ApiService {\n  constructor() {\n    this.page = 1;\n    this.searchQuery = '';\n    this.total = 0;\n    this.amount = 0;\n  }\n\n  getImages() {\n    const { baseURL, api_key } = {\n      baseURL: 'https://pixabay.com/api/',\n      api_key: '23013902-f53df9bcd1cd3c8e660b93280',\n    };\n\n    const URL = `${baseURL}?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=12&key=${api_key}`;\n\n    return fetch(URL)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .then(result => {\n        this.page += 1;\n        this.total = result.totalHits;\n        this.amount += result.hits.length;\n\n        return result;\n      })\n      .catch(error => console.warn(error));\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  resetAmount() {\n    this.amount = 0;\n  }\n\n  get value() {\n    return this.searchQuery;\n  }\n\n  set value(newInputValue) {\n    this.searchQuery = newInputValue;\n  }\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport style from './Loader.module.css';\n\nexport default function LoaderOn() {\n  return (\n    <div className={style.Loader}>\n      <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport style from './SerchError.module.css';\n\nexport default function SerchError({ message }) {\n  return (\n    <span className={style.Message}> Search images \"{message}\" not found </span>\n  );\n}\n\nSerchError.protoType = {\n  message: PropTypes.string,\n};\n","// import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport ApiService from '../../services/ApiService';\nimport Loader from '../Loader/Loader';\nimport SerchError from '../SearchError/SearchError';\nimport PropTypes from 'prop-types';\nimport style from './ImageGallery.module.css';\n\nconst newApiService = new ApiService();\n\nexport default function ImageGallery({ searchQuery }) {\n  const [cards, setCards] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    setStatus('pending');\n\n    newApiService.value = searchQuery;\n    newApiService.resetPage();\n    newApiService\n      .getImages()\n      .then(result => {\n        if (result.hits.length !== 0) {\n          setCards(result.hits);\n          setStatus('resolved');\n          return;\n        }\n\n        setCards(result.hits);\n        setStatus('rejected');\n        return result;\n      })\n      .catch(err => console.warn(err));\n  }, [searchQuery]);\n\n  const loadMore = () => {\n    setStatus('pending');\n\n    newApiService\n      .getImages()\n      .then(result => {\n        setCards([...cards, ...result.hits]);\n        setStatus('resolved');\n        return result;\n      })\n      .catch(err => console.warn(err))\n      .finally(() => {\n        setTimeout(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }, 100);\n      });\n  };\n\n  if (status === 'idle') {\n    return <div className={style.Idle}>Введите запрос поиска.</div>;\n  }\n\n  if (status === 'pending') {\n    return (\n      <>\n        <ul className={style.ImageGallery}>\n          <ImageGalleryItem cards={cards} />\n        </ul>\n        <Loader />;\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    return <SerchError message={searchQuery} />;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <ul className={style.ImageGallery}>\n          <ImageGalleryItem cards={cards} />\n        </ul>\n        <Button loadMore={loadMore} />\n      </>\n    );\n  }\n}\n\nImageGallery.protoType = {\n  searchQuery: PropTypes.string,\n};\n\n// export default class ImageGallery extends Component {\n//   state = {\n//     cards: [],\n//     status: Status.IDLE,\n//     page: 1,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevSearch = prevProps.searchQuery;\n//     const nextSearch = this.props.searchQuery;\n\n//     if (prevSearch !== nextSearch) {\n//       this.setState({ status: Status.PENDING });\n//       //   console.log('prevProps.searchQuery:', prevProps.searchQuery);\n//       //   console.log('this.props.searchQuery:', this.props.searchQuery);\n//       //   console.log('Изменился запрос');\n\n//       newApiService(nextSearch, 1).then(result => {\n//         if (result.hits.length !== 0) {\n//           return this.setState({\n//             cards: result.hits,\n//             status: 'resolved',\n//             page: 1,\n//           });\n//         }\n\n//         return this.setState({ cards: result.hits, status: 'rejected' });\n//       });\n//     }\n//     //   console.log(this.state.cards);\n//   }\n\n//   loadMore = () => {\n//     const nextSearch = this.props.searchQuery;\n//     const { page } = this.state;\n//     this.setState({ status: 'pending' });\n\n//     ApiService(nextSearch, page + 1)\n//       .then(result => {\n//         return this.setState(prevState => {\n//           return {\n//             cards: [...prevState.cards, ...result.hits],\n//             status: 'resolved',\n//             page: prevState.page + 1,\n//           };\n//         });\n//       })\n//       .finally(() => {\n//         setTimeout(() => {\n//           window.scrollTo({\n//             top: document.documentElement.scrollHeight,\n//             behavior: 'smooth',\n//           });\n//         }, 100);\n//       });\n//     // console.log(\"this.state.page\", this.state.page);\n//   };\n\n//   render() {\n//     const { cards, status } = this.state;\n\n//     const { searchQuery } = this.props;\n\n//     if (status === 'idle') {\n//       return <div className={style.Idle}>Введите запрос поиска.</div>; //Добавить стиль\n//     }\n\n//     if (status === 'pending') {\n//       return (\n//         <>\n//           <ul className={style.ImageGallery}>\n//             <ImageGalleryItem cards={cards} />\n//           </ul>\n//           <Loader />\n//         </>\n//       );\n//     }\n\n//     if (status === 'rejected') {\n//       return <SerchError message={searchQuery} />;\n//     }\n\n//     if (status === 'resolved') {\n//       return (\n//         <div>\n//           {cards && (\n//             <>\n//               <ul className={style.ImageGallery}>\n//                 <ImageGalleryItem cards={cards} />\n//               </ul>\n\n//               <Button loadMore={this.loadMore} />\n//             </>\n//           )}\n//         </div>\n//       );\n//     }\n//   }\n// }\n\n// ImageGallery.protoType = {\n//   searchQuery: PropTypes.string,\n// };\n","import React, { useState } from 'react';\nimport Container from './components/Container/Container';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handlesearchQuery = searchQuery => {\n    setSearchQuery(searchQuery);\n  };\n\n  return (\n    <Container>\n      <Searchbar searchPictures={handlesearchQuery} />\n      <ImageGallery searchQuery={searchQuery} />\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Container>\n  );\n}\n// export default class App extends Component {\n//   state = {\n//     searchQuery: '',\n//     showModal: false,\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   handlesearchQuery = searchQuery => {\n//     this.setState({ searchQuery });\n//     // console.log(searchQuery);\n//   };\n\n//   render() {\n//     const { searchQuery } = this.state;\n//     return (\n//       <Container>\n//         <Searchbar searchPictures={this.handlesearchQuery} />\n//         <ImageGallery searchQuery={searchQuery} />\n\n//         <ToastContainer\n//           position=\"top-right\"\n//           autoClose={2000}\n//           hideProgressBar={false}\n//           newestOnTop={false}\n//           closeOnClick\n//           rtl={false}\n//           pauseOnFocusLoss\n//           draggable\n//           pauseOnHover\n//         />\n//       </Container>\n//     );\n//   }\n// }\n","import './index.css';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport style from './App.module.css';\n\nReactDom.render(\n  <React.StrictMode>\n    <App className={style.App} />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2E0ct\",\"Idle\":\"ImageGallery_Idle__1cdk5\"};"],"sourceRoot":""}